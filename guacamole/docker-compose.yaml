version: '2.0'

# networks
# create a network 'guacnetwork_compose' in mode 'bridged'
networks:
  guacnetwork_compose:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - /portainer/Files/AppData/Config/Guacamole/drive:/drive:rw
    - /portainer/Files/AppData/Config/Guacamole/record:/record:rw
    ports:
    - 4822:4822
  # postgres
  postgres:
    container_name: postgres_guacamole_compose
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
    image: postgres:latest
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - /portainer/Files/AppData/Config/Guacamole/db/init:/docker-entrypoint-initdb.d:ro
    - /portainer/Files/AppData/Config/Guacamole/db/data:/var/lib/postgresql/data:rw

  # guacamole
  guacamole:
    container_name: guacamole_compose
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: 192.168.1.78
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: 192.168.1.78
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
      GUACD_PORT: 4822
    image: guacamole/guacamole
    links:
    - guacd
    networks:
      guacnetwork_compose:
    ports:
## enable next line if not using nginx
##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    - 8080:8080/tcp
    restart: always